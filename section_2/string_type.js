// 문자열 타입

// 문자열 타입은 작은따옴표(''), 큰따옴표(""), 백틱(``)을 사용하여 생성한다.
let word1 = '작은따옴표 안에 "큰따옴표" 사용';
let word2 = "큰따옴표 안에 '작은따옴표' 사용";
console.log(word1, word2);

// 실행결과
// 작은따옴표 안에 "큰따옴표" 사용 큰따옴표 안에 '작은따옴표' 사용


// ⚠️ 오류 발생
// let word1 = '작은따옴표 안에 '작은따옴표' 사용';
// let word2 = "큰따옴표 안에 "큰따옴표" 사용";
// console.log(word1, word2);


// 작은 따옴표 안에 작은 따옴표를 넣으려면
// 백슬래시(\)를 사용하여 이스케이프 처리를 해야 한다.
let word3 = '작은따옴표 안에 \'작은따옴표\' 사용';
let word4 = "큰따옴표 안에 \"큰따옴표\" 사용";
console.log(word3, word4);3
// 실행 결과
// 작은따옴표 안에 '작은따옴표' 사용 큰따옴표 안에 "큰따옴표" 사용


// let longName = '김수한무 거북이와 두루미 삼천갑자 동방삭 치치카포 사리사리센타 워리워리 세브리깡 무두셀라 구름이 허리케인에 담벼락 담벼락에 서생원 서생원에 고양이 고양이엔 바둑이 바둑이는 돌돌이';

let longName = '김수한무 거북이와 두루미 \
삼천갑자 동방삭 치치카포 사리사리센타 \
워리워리 세브리깡 무두셀라 구름이 \
허리케인에 담벼락 담벼락에 서생원 \
서생원에 고양이 고양이엔 바둑이 \
바둑이는 돌돌이';

// ⚠️ 줄바뀜 되는 것이 아님
// 코드를 긴 문자열을 할당하는 보기좋게 만들기 위해 코드상의 줄바꿈을 하였을 뿐
// 줄바뀜을 하려면 백슬래시(\)를 사용해야 함

// 큰따옴표도 마찬가지


console.log(longName);
// 실행 결과
// 김수한무 거북이와 두루미 삼천갑자 동방삭 치치카포 사리사리센타 워리워리 세브리깡 무두셀라 구름이 허리케인에 담벼락 담벼락에 서생원 서생원에 고양이 고양이엔 바둑이 바둑이는 돌돌이


// 문자열 비교

// x == y	값이 같다.	
// x === y	자료형도 값도 같다.	권장
// x != y	값이 다르다.	
// x !== y	자료형 또는 값이 다르다.	권장
// x < y	사전순상 x가 먼저 온다.	
// x <= y	사전순상 x가 먼저 오거나 같다.	
// x > y	사전순상 y 먼저 온다.	
// x >= y	사전순상 y 먼저 오거나 같다.

var string = 'Hello!' === 'hello!'
console.log(string);
// 실행 결과
// false

console.log(
    '안녕하세요~' === "안녕하세요~",
    '안녕하세요~' === `안녕하세요~`,
    "안녕하세요~" === `안녕하세요~`,
  );
// 실행 결과
// true true true
// 문자열 비교에서는 작은따옴표(''), 큰따옴표(""), 백틱(``)을 사용하는 것에 차이가 없다.



console.log(
    '1' == '1',
    '1' == 1,
    '1' == 2
  );
// 실행 결과
// true true false
// 암묵적 타입 변환
// 문자열 '1'을 숫자 1로 변환하여 비교함
  
  console.log(
    '1' != '1',
    '1' != 1,
    '1' != 2
  );

// 실행 결과
// false false true

// 사전 순 비교
// 유니코드 값으로 비교
// 결국 숫자로 만들어서 비교하는 것이다.
// 사전순으로 앞에 있는 문자열이 더 작은 값으로 평가됨
// > 기호는 유니 코드 값으로

console.log(
    'ABC' < 'abc',
    'apple' <= 'banana',
    '가나다' > '라마바',
    '안녕' >= '안녕'
  );

// 실행 결과
// true true false true
// 주요내용
// 대문자가 소문자보다 사전순으로 먼저 오기 때문에
//  'ABC' < 'abc'의 결과가 true가 된다.
// a = 97, A = 65, b = 98, B = 66, c = 99, C = 67

//  '가나다' > '라마바'의 결과는 유니코드 값으로 비교하면
// '가'는 유니코드 10진수로 44032, '라'는 46972이므로 
// 첫번째 문자열에서 비교가 끝이 난다 가 가 라보다 작으므로 false가 된다.



  // ⚠️ 숫자 문자열 관련 주의!
console.log(
    100 > 12, // 숫자는 그 자체로 비교
    '100' > '12', // 문자는 사전순으로 비교
    '100' > 12, // 문자와 숫자를 비교하면 문자를 숫자로 변환
  );

// 실행 결과
// true false true
// 주요내용
// '100' > '12'는 문자열로 비교한다
// 문자열 '100'의 두번째 문자 '0'이 '12'의 두번째 문자 '2'보다 작기 때문에
// 사전순으로 먼저 오는 것이 '100'이다.
// 즉 '100' 이  '12' 보다 작다