
// 1. 문제
const a = 5;
const b = "3";

const c = a + b; 

console.log(c);

//  어떤 값이 출력될까요?
// 답 : 53
// 문자열과 숫자를 더하면 문자열이 되기 때문이다.

// 2. 문제

const hour = 2;
const minute = 30;


//  '총 경과시간은 ~분입니다.'와 같은 문자열이 되도록
//  템플릿 리터럴을 사용해서 작성해보세요.
// 답 : 
console.log(`총 경과시간은 ${hour * 60 + minute}분입니다.`);



// 3. 문제
console.log(
    1 == '1',
    1 === '1',
    1 != '1',
    1 !== '1'
);

// 어떤 값이 출력될까요?
// true  == 비교는 타입을 비교하지 않음 
// false === 타입까지 비교하기 떄문에 타입불일치
// false == 은 true엿기 떄문에 !=은 false
// true !== 타입까지 비교할때 false였기 때문에 true


// 4. 문제
let x = 3;

console.log(x++, ++x, x--, --x);

// 어떤 값이 출력될까요?
// 정답 3 5 5 3
// x++ 처럼 +가 뒤에 붙는 것은 후위연산자
// ++x 처럼 +가 앞에 붙는 것은 전위연산자
// x의 콘솔 순서대로 x의 값이 증가한다 후위연산자더라도 다음 x 출력시에는 
// 증가 되거나 감소된 값이 출력된다



// 5. 문제
let x2 = 5;
let y = 10;
let z = x2 > y && y++;

console.log(y, z);

//  어떤 값이 출력될까요?
// 정답 10 false
// 연산자 우선순위에 따라 x2 > y 먼저 연산되고 만약 x2 > y 가 false라면
// 후에오는 && 그리고 연산은 실행되지 않는다



// 6. 문제

// ‘커피를 마시는 새’라는 책이 있습니다. 페이지수는 500, 품절은 되지 않은 상태고 장르는 판타지, SF, 스릴러입니다.
//  이 책의 정보를 객체와 배열을 사용하여 표현해보세요.
const book ={
    title : '커피를 마시는 새',
    page : 500,
    soldOut : false,
    genre : ['판타지', 'SF', '스릴러']
}

// 7. 문제

let a2 = 10;
let b2 = a2;
a2 = 20;

let c2 = { value: 10 };
let d = c2;
c2.value = 20;

console.log(a2, b2, c2.value, d.value);

//  어떤 값이 출력될까요?
// 답 : 20 , 10 , 20 , 20
// 원시형은 동적할당이 되어있기 때문에 깊은 복사가 일어난다
// 객체는 참조형으로 동적할당이 되어있지 않기 때문에 얕은 복사가 일어난다